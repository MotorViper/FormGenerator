Character: 
    BaseStrength: 10
    BaseDexterity: 10
    BaseConstitution: 10
    BaseIntelligence: 10
    BaseWisdom: 10
    BaseCharisma: 10
	Experience: 0
	Weapon1: None
		MiscAttackBonus: 0
	Weapon2: None
		MiscAttackBonus: 0
	Armour: None
	Shield: None
	Player: ?
	Race: Human
	Alignment: N
	Deity:
	Size: {Races.{Race}.Size}
	Speed: {Races.{Race}.Speed}
	Age:
	Gender:
	Height:
	Weight:
	Eyes:
	Hair:
	Skin:
	Strength: $BaseStrength + COUNT:{Level.AbilityIncrease=Strength}
	Dexterity: $BaseDexterity + COUNT:{Level.AbilityIncrease=Dexterity}
	Constitution: $BaseConstitution + COUNT:{Level.AbilityIncrease=Constitution}
	Intelligence: $BaseIntelligence + COUNT:{Level.AbilityIncrease=Intelligence}
	Wisdom: $BaseWisdom + COUNT:{Level.AbilityIncrease=Wisdom}
	Charisma: $BaseCharisma + COUNT:{Level.AbilityIncrease=Charisma}
	AttributeModifier: ($$1 - 10) / 2
	DexModifier: AttributeModifier: Dexterity
	StrModifier: AttributeModifier: Strength
	ConModifier: AttributeModifier: Constitution
	WisModifier: AttributeModifier: Wisdom
	IntModifier: AttributeModifier: Intelligence
	ChaModifier: AttributeModifier: Charisma
	ClassList: JOIN:(OVER:(AGG:{Level.Class}|cl|{cl}#0 + "(" + {cl}#1 + ")")|'/')
	HP: (SUM:$Level.HP) + (COUNT:{Level} * $ConModifier)
	ArmourInfo: SPLIT:({Armour.{1}.Attributes}|' '|8)
	ShieldInfo: SPLIT:({Shield.{1}.Attributes}|' '|8)
	ArmourBonus: INT:(ArmourInfo:($Armour)#1)
	ShieldBonus: INT:ShieldInfo:($Shield)#1
	FlatFooted: 10 + $ArmourBonus + $SizeACModifier + $ShieldBonus
	AC: $FlatFooted + $DexModifier
	Touch: 10 + $DexModifier + $SizeACModifier
	MiscInitiative: SUM:OVER:({Level.Feats}|f|{Feats.{f}.InitiativeBonus})
	Initiative: $DexModifier + $MiscInitiative
	SizeACModifier: {Size.{Races.{Race}.Size}.ACModifier}
	NaturalArmour: {Races.{Race}.ACBonus}
	DeflectionModifier: 0
	MiscACModifier: 0
	InfoAtLevel: SPLIT:({Classes.{1}.LevelInformation.{2}}|' '|(COMP:({Classes.{1}.LevelType}|MagicUser|15|5)))
	GetLevelField: INT:InfoAtLevel:({3}|{1})#{2}
	BaseValue: SUM:OVER:(KEYS:Classes|cl|GetLevelField:(COUNT:{Level.Class=$cl}|$1|$cl))
	FortitudeBase: BaseValue: 1
	ReflexBase: BaseValue: 2
	WillBase: BaseValue: 3
	FortitudeModifier: $ConModifier
	ReflexModifier: $DexModifier
	WillModifier: $WisModifier
	FortitudeThrow: $FortitudeModifier + $FortitudeBase
	ReflexThrow: $ReflexModifier + $ReflexBase
	WillThrow: $WillModifier + $WillBase
	BAB: BaseValue: 0
	SpellResistance: 0
	SizeBABModifier: 0
	MiscBABModifier: 0
	Grapple: $BAB + $StrModifier + $SizeBABModifier + $MiscBABModifier
	Melee: $BAB + $StrModifier
	Missile: $BAB + $DexModifier
	IsClassSkill: CONTAINS:({Classes.({Level.Class}#0).ClassSkills}|$1)
	SkillPoints: SUM:DEF:({Level.Skills.{1}}|0)
	SkillModifier: {{Skills.{1}.Key}Modifier}
	CanUseSkill : OR:(IF:({Skills.{1}.TrainedOnly}|False|True)|COMP:(0|$SkillPoints|False|False|True))
	ClassesContain: CONTAINS:({Level.Class}|$1)
	ClassFeatures: IF:((ClassesContain:$1)|{Classes.{1}.Features})
	Features: JOIN:(OVER:(KEYS:Classes|cl|ClassFeatures:$cl)|", ")
	PositionOfFeats: COMP:({Classes.{1}.LevelType}|MagicUser|14|4)
	FeatsAtLevel: SPLIT:(InfoAtLevel:($1|$2)#(PositionOfFeats:$1)|',')
	NumInstances: COUNT:{Level.Class=$1}
	LevelsForClass: OVER:(RANGE:(1|$2)|n|FeatsAtLevel:($1|$n))
	ClassFeats: OVER:(KEYS:Classes|cl|LevelsForClass:($cl|NumInstances:($cl)))
	AllFeats: U:F:(F:({Level.Feats})|F:$ClassFeats)
	LevelFeats: OVER:($AllFeats|l|($l ' (' {Feats.{l}.Description} ')'))
	Feats: JOIN:((F:($LevelFeats) - ("Bonus Feat"|""))|NL)
	WeaponInfo: SPLIT:({Weapons.{1}.Attributes}|' '|7)
	DamageType: WeaponInfo:($1)#6
	Critical: WeaponInfo:($1)#3
	Increment: WeaponInfo:($1)#4
	WeaponDamage: WeaponInfo:($1)#2
	DamageBonusWithStr: INT:$StrModifier + INT:DEF:({Weapons.{$1}.DamageBonus}|0)
	UseDexBonusForMelee: OR:OVER:(F:({Level.Feats})|cl|{Feats.{cl}.UseDexBonusForMelee})
	RangedDamage: (COMP:({Weapons.{$1}.DamageBonus}|0|' '| '+' ({Weapons.{$1}.DamageBonus})))
	MeleeDamage: '+' (DamageBonusWithStr:$1)
	TotalWeaponDamage: (WeaponDamage:$$1) (IF:({Weapons.{$1}.IsMelee}|MeleeDamage:$1|RangedDamage:$1))
	TotalBAB: IF:(OR:({Weapons.{$1}.IsMelee}|$UseDexBonusForMelee)|$Melee|$Missile) + {Weapons.{$1}.AttackBonus} + DEF:({{1}.MiscAttackBonus}, 0)
	ArmourType: {Armour.{Armour}.Type}
	ArmourMaxDex: ArmourInfo:($Armour)#2
	ArmourCheck: ArmourInfo:($Armour)#3
	ArmourSpellFailure: ArmourInfo:($Armour)#4
	ArmourSpeed: COMP:(ArmourInfo:($Armour)#5|'30ft.'|False|True)
	ArmourWeight: ArmourInfo:($Armour)#7
	ShieldCheck: ShieldInfo:($Shield)#3
	ShieldSpellFailure: ShieldInfo:($Shield)#4
	ShieldWeight: ShieldInfo:($Shield)#7
